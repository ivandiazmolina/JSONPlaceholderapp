//
//  ProfileWorkerTests.swift
//  JSONPlaceholderapp
//
//  Created by Iván Díaz Molina on 07/06/2020.
//  Copyright (c) 2020 Iván Díaz Molina. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import JSONPlaceholderapp
import XCTest

class ProfileWorkerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: ProfileWorker!
    var album: Album?
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        
        album = Album()
        album?.userId = 1
        album?.id = 1
        album?.title = "title"
        
        setupProfileWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProfileWorker() {
        sut = ProfileWorker()
    }
    
    // MARK: Repositories Spy
    class SuccessProfileWorker : ProfileWorker {
        
        var photos: [Photo]?
        var getPhotosCalled = false
        
        override func getPhotos(for album: Album, completion: @escaping ([Photo]?, String?) -> Void) {
            
            getPhotosCalled = true
            
            photos = []
            
            for index in 0...2 {
                var photo = Photo()
                photo.albumId = album.id
                photo.id = index
                photo.title = "title"
                photo.url = "url"
                photo.thumbnailUrl =  "thumbnailUrl"
                
                photos?.append(photo)
            }
            completion(photos, "")
        }
    }
    
    class FailureProfileWorker : ProfileWorker {
        
        var getPhotosCalled = false
        
        override func getPhotos(for album: Album, completion: @escaping ([Photo]?, String?) -> Void) {
            getPhotosCalled = true
            completion([], "")
        }
        
    }
    
    // MARK: Test doubles
    
    // MARK: Tests
    
    func testGetPhotos() {
        
        // Given
        let sut = SuccessProfileWorker()
        var mPhotos: [Photo]?
        let completedExpectation = expectation(description: "Completed")
        
        // When
        sut.getPhotos(for: album ?? Album()) { (photos, error) in
            mPhotos = photos
            completedExpectation.fulfill()
        }
        
        // Then
        XCTAssertTrue(sut.getPhotosCalled)
        waitForExpectations(timeout: 1.1) { (error) in
            // Then
            XCTAssertEqual(self.album?.id, mPhotos?.first?.albumId, "Album id is not same")
        }
    }
}
