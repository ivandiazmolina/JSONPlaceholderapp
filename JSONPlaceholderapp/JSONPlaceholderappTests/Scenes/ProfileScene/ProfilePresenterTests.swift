//
//  ProfilePresenterTests.swift
//  JSONPlaceholderapp
//
//  Created by Iván Díaz Molina on 07/06/2020.
//  Copyright (c) 2020 Iván Díaz Molina. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import JSONPlaceholderapp
import XCTest

class ProfilePresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: ProfilePresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupProfilePresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProfilePresenter() {
        sut = ProfilePresenter()
    }
    
    // MARK: Test doubles
    
    class ProfileDisplayLogicSpy: ProfileDisplayLogic {
        
        var setupViewCalled = false
        var displayLoadingCalled = false
        var displayAlbumsCalled = false
        var displayTodosCalled = false
        var displayPhotosCalled = false
        
        func setupView(viewModel: Profile.Models.ViewModel) {
            setupViewCalled = true
        }
        
        func displayLoading(_ show: Bool) {
            displayLoadingCalled = true
        }
        
        func displayAlbums() {
            displayAlbumsCalled = true
        }
        
        func displayTodos() {
            displayTodosCalled = true
        }
        
        func displayPhotos() {
            displayPhotosCalled = true
        }
    }
    
    // MARK: Tests
    
    func testSetupView(viewModel: Profile.Models.ViewModel) {
        // Given
        let spy = ProfileDisplayLogicSpy()
        sut.viewController = spy
        let response = Profile.Models.Response()
        
        // When
        sut.setupView(response: response)
        
        // Then
        XCTAssertTrue(spy.setupViewCalled, "setupView(response:) should ask the view controller to display the result")
    }
    
    func testDisplayLoading() {
        // Given
        let spy = ProfileDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.displayLoading(true)
        
        // Then
        XCTAssertTrue(spy.displayLoadingCalled, "displayLoading(show:) should ask the view controller to display the result")
    }
    
    func testPresentAlbums() {
        // Given
        let spy = ProfileDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.presentAlbums()
        
        // Then
        XCTAssertTrue(spy.displayAlbumsCalled, "presentAlbums should ask the view controller to display the result")
    }
    
    func testPresentTodos() {
        // Given
        let spy = ProfileDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.presentTodos()
        
        // Then
        XCTAssertTrue(spy.displayTodosCalled, "presentTodos should ask the view controller to display the result")
    }
    
    func testPresentPhotos() {
        // Given
        let spy = ProfileDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.presentPhotos()
        
        // Then
        XCTAssertTrue(spy.displayPhotosCalled, "presentPhotos should ask the view controller to display the result")
    }
}
