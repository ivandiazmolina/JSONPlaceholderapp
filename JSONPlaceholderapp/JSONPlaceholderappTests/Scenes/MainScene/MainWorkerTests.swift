//
//  MainWorkerTests.swift
//  JSONPlaceholderapp
//
//  Created by Iván Díaz Molina on 08/06/2020.
//  Copyright (c) 2020 Iván Díaz Molina. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import JSONPlaceholderapp
import XCTest

class MainWorkerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: MainWorker!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupMainWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupMainWorker() {
        sut = MainWorker()
    }
    
    // MARK: Repositories Spy
    class SuccessMainWorker : MainWorker {
        
        var posts: [Post]?
        var users: [User]?
        var getInitialDataCalled = false
        
        override func getInitialData(completion: @escaping ([Post]?, [User]?, String?) -> Void) {
            
            getInitialDataCalled = true
            
            posts = []
            users = []
            
            for index in 0...2 {
                
                // Post
                var post = Post()
                post.userId = index
                post.id = index
                post.title = "title"
                post.body = "body"
                
                posts?.append(post)
                
                // User
                var user = User()
                user.id = index
                user.username = "username"
                user.email = "email"
                user.website = "website"
                user.avatar = "avatar"
                
                users?.append(user)
            }
            
            completion(posts, users, "")
        }
    }
    
    class FailureMainWorker : MainWorker {
        
        var getInitialDataCalled = false
        
        override func getInitialData(completion: @escaping ([Post]?, [User]?, String?) -> Void) {
            getInitialDataCalled = true
            completion([], [], "")
        }
    }
    
    // MARK: Test doubles
    
    // MARK: Tests
    
    func testGetInitialData() {
        
        // Given
        let sut = SuccessMainWorker()
        var mPosts: [Post]?
        var mUsers: [User]?
        let completedExpectation = expectation(description: "Completed")
        
        // When
        sut.getInitialData { (posts, users, error) in
            mPosts = posts
            mUsers = users
            completedExpectation.fulfill()
        }
        
        // Then
        XCTAssertTrue(sut.getInitialDataCalled)
        waitForExpectations(timeout: 1.1) { (error) in
            // Then
            XCTAssert(((mPosts?.first) != nil))
        }
    }
}
